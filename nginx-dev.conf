upstream node_app {
    server was-deployment-svc:5000;
}

server {
    server_name  dev.noonai.kr;
    client_max_body_size 1024M;
    listen 80;
    charset utf-8;
    root /usr/share/nginx/html/;
    location ~* \.(?:css|js|png|jpe?g|mp4)$ { }

    # kill cache
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache';
    if_modified_since off;
    expires off;
    etag off;

    # location / {
    #     # auth_request /auth;
    #     if ($request_uri ~ ^/(.*)\.html) {
    #         return 302 /$1;
    #     }
    #     try_files $uri $uri.html $uri/ =404;
    # }

    location = /index {
        try_files /index.html =404;
    }

    location = /sublogin {
        try_files /sublogin.html =404;
    }

    location = /join {
        try_files /join.html =404;
    }

    location = /findpwd {
        try_files /findpwd.html =404;
    }

    location = /log {
        try_files /log.html =404;
    }

    location = /main {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /key {
        try_files /key.html =404;
    }

    location = /main2 {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /encrypt/image {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /encrypt/loading {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /encrypt/video {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /decrypt {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /submanage {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /submanage/add {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        try_files $uri $uri.html $uri/ =404;
    }

    location = /auth {
        internal;
        proxy_pass http://node_app/api/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

    error_page 404 /error.html;
    location = /error.html { }

    location /api {
        proxy_pass http://node_app;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        # add_header 'Access-Control-Allow-Origin' '*';
    }
}